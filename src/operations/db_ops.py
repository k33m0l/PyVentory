import psycopg2
import os

from psycopg2 import sql
from objects.item import Item

def connect_to_db():
    try:
        conn = psycopg2.connect(
            database=os.environ["DB_NAME"],
            host="database",
            user=os.environ["DB_USER"],
            password=os.environ["DB_PASS"],
            port="5432"
        )
        conn.autocommit = True
        return conn
    except psycopg2.Error as err:
        print("Error connecting to database: " + str(err))
        raise

def create_table(table_name):
    try:
        conn = connect_to_db()
        cursor = conn.cursor()
        query = psycopg2.sql.SQL("""
            CREATE TABLE IF NOT EXISTS {} (
            item_id integer PRIMARY KEY GENERATED by default as identity,
            name varchar(255) NOT NULL,
            count integer NOT NULL);
        """).format(
            psycopg2.sql.Identifier(table_name)
        )
        cursor.execute(query)
        conn.close()
    except psycopg2.Error as err:
        print("Failed to create database: " + str(err))
        raise

def read_all_items():
    try:
        conn = connect_to_db()
        cursor = conn.cursor()
        cursor.execute("SELECT * FROM inventory;")
        response = cursor.fetchall()
        conn.close()
        return response
    except psycopg2.Error as err:
        print("Failed to read from inventory: " + str(err))
        raise

def add_item(item: Item):
    try:
        conn = connect_to_db()
        cursor = conn.cursor()
        cursor.execute(
            "INSERT INTO inventory (name, count) VALUES(%(item_name)s, %(item_amount)s);",
            {
                "item_name": item.name,
                "item_amount": str(item.amount),
            }
        )
        conn.close()
    except psycopg2.Error as err:
        print("Failed to write into inventory: " + str(err))
        raise
